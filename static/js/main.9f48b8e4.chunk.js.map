{"version":3,"sources":["components/TodoList.jsx","components/AddTodo.jsx","App.js","index.js"],"names":["TodosContext","React","createContext","todos","fetchTodos","UpdateTodo","item","id","useDisclosure","isOpen","onOpen","onClose","useState","todo","setTodo","useContext","updateTodo","a","fetch","method","headers","body","JSON","stringify","icon","isRound","onClick","size","pr","type","placeholder","aria-label","value","onChange","event","target","h","DeleteTodo","deleteTodo","TodoHelper","Todos","setTodos","response","json","data","useEffect","length","Provider","divider","borderColor","borderWidth","p","borderRadius","w","maxW","base","sm","lg","xl","alignItems","map","colorScheme","m","AddTodo","setItem","onSubmit","newTodo","then","alert","mt","variant","px","App","useColorMode","colorMode","toggleColorMode","alignSelf","fontWeight","bgGradient","bgClip","ReactDOM","render","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f48b8e4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport {\n    Badge,\n    Button,\n    IconButton,\n    Input,\n    InputGroup,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    VStack,\n    HStack,\n    Text,\n    useDisclosure,\n    StackDivider,\n    Spacer,\n} from \"@chakra-ui/react\";\n\nconst TodosContext = React.createContext({\n    todos: [], fetchTodos: () => {}\n})\n\n\nfunction UpdateTodo({item, id}) {\n    const {isOpen, onOpen, onClose} = useDisclosure()\n    const [todo, setTodo] = useState(item)\n    const {fetchTodos} = React.useContext(TodosContext)\n\n    const updateTodo = async () => {\n        await fetch(`http://localhost:8000/todo/${id}`, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ item: todo })\n        })\n        onClose()\n        await fetchTodos()\n    }\n\n    return (\n        <>\n            <IconButton icon={ < FaEdit/> } isRound=\"true\" onClick={onOpen} />\n            <Modal isOpen={isOpen} onClose={onClose}>\n            <ModalOverlay/>\n            <ModalContent>\n                <ModalHeader>Update Todo</ModalHeader>\n                <ModalCloseButton/>\n                <ModalBody>\n                <InputGroup size=\"md\">\n                    <Input\n                    pr=\"4.5rem\"\n                    type=\"text\"\n                    placeholder=\"Add a todo item\"\n                    aria-label=\"Add a todo item\"\n                    value={todo}\n                    onChange={event => setTodo(event.target.value)}\n                    />\n                </InputGroup>\n                </ModalBody>\n\n                <ModalFooter>\n                <Button h=\"2rem\" size=\"sm\" onClick={updateTodo}>Update</Button>\n                </ModalFooter>\n            </ModalContent>\n            </Modal>\n        </>\n    )\n}\n\n\nfunction DeleteTodo({item, id}) {\n    const [todo] = useState(item)\n    const {fetchTodos} = React.useContext(TodosContext)\n\n    const deleteTodo = async () => {\n        await fetch(`http://localhost:8000/todo/${id}`, {\n            method: \"DELETE\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ item: todo })\n        })\n        await fetchTodos()\n    }\n\n    return (\n        <IconButton icon={ <FaTrash /> } isRound=\"true\" onClick={deleteTodo} />\n    )\n}\n\n\nfunction TodoHelper({item, id, fetchTodos}) {\n    return (\n        <HStack key={id}>\n            <Text>{item}</Text>\n            <Spacer />\n            <UpdateTodo item={item} id={id} fetchTodos={fetchTodos}/>\n            <DeleteTodo item={item} id={id} fetchTodos={fetchTodos}/>\n        </HStack>\n    )\n}\n\n\n\nexport default function Todos() {\n    const [todos, setTodos] = useState([])\n    const fetchTodos = async () => {\n        const response = await fetch(\"http://localhost:8000/todo\")\n        const todos = await response.json()\n        setTodos(todos.data)\n    }\n\n    /*function addTodo(todo) {\n        setTodos([...todos.todo])\n    }*/\n\n    useEffect(() => {\n        fetchTodos()\n    }, [])\n\n    if (!todos.length) {\n        return (\n            <Badge colorScheme=\"green\" p=\"4\" m=\"4\" borderRadius=\"lg\">\n                No Todos left for today, Yay!\n            </Badge>\n        )\n    }\n\n    return (\n        <TodosContext.Provider value={{todos, fetchTodos}}>\n            <VStack\n                divider={ <StackDivider /> } \n                borderColor=\"gray.500\" \n                borderWidth=\"2px\" \n                p=\"4\"\n                borderRadius=\"lg\"\n                w=\"100%\"\n                maxW={{base: \"90vw\", sm: \"80vw\", lg: \"50vw\", xl: \"40vw\"}}\n                alignItems=\"stretch\"\n            >\n                {todos.map((todo) => (\n                    <TodoHelper item={todo.item} id={todo.id} fetchTodos={fetchTodos} />\n                ))}\n            </VStack>\n        </TodosContext.Provider>\n    )\n}","import React from 'react'\nimport { Input, HStack, Button } from \"@chakra-ui/react\";\n\nconst TodosContext = React.createContext({\n    todos: [], fetchTodos: () => {}\n})\n\n\nfunction AddTodo() {\n    const [item, setItem] = React.useState(\"\");\n    const {todos, fetchTodos} = React.useContext(TodosContext);\n\n    const handleInput = event => {\n        setItem(event.target.value)\n    };\n\n    const handleSubmit = () => {\n        if (!item) {\n            alert(\"Empty todos. Please add your tasks!\")\n            return;\n        }\n\n        const newTodo = {\n            \"id\": todos.length + 1,\n            \"item\": item\n        }\n        \n        fetch(\"http://localhost:8000/todo\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newTodo)\n        }).then(fetchTodos)\n    };\n\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <HStack mt=\"8\">\n                <Input\n                    variant=\"filled\"\n                    type=\"text\"\n                    placeholder=\"Add a todo item\"\n                    aria-label=\"Add a todo item\"\n                    value={item}\n                    onChange={handleInput}\n                />\n                <Button colorScheme=\"pink\" variant=\"solid\" px=\"8\" type=\"submit\">\n                    Add Todo\n                </Button>\n            </HStack>\n        </form>\n    );\n}\n\nexport default AddTodo\n","import React from 'react';\nimport { FaSun, FaMoon } from 'react-icons/fa';\nimport { Heading, VStack, IconButton, useColorMode } from '@chakra-ui/react';\nimport Todos from \"./components/TodoList\";\nimport AddTodo from \"./components/AddTodo\";\n\nfunction App() {\n  const {colorMode, toggleColorMode} = useColorMode();\n\n  return (\n    <VStack p={4}>\n      <IconButton \n        icon={ colorMode === \"light\" ? <FaSun /> : <FaMoon />} \n        isRound=\"true\" \n        size=\"lg\" \n        alignSelf=\"flex-end\"\n        onClick={toggleColorMode}\n      />\n\n      <Heading \n        fontWeight=\"extrabold\" \n        size=\"2xl\" \n        bgGradient=\"linear(to-r, pink.500, pink.300, blue.500)\"\n        bgClip=\"text\"\n        p={10}\n      >\n          Todo Application\n      </Heading>\n\n      <Todos />\n      <AddTodo />\n    </VStack>\n  );\n}\n\nexport default App;\n","import { ColorModeScript, ChakraProvider } from '@chakra-ui/react';\n//import { theme, ThemeProvider } from \"@chakra-ui/react\";\nimport React , { StrictMode }from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode=\"light\"/>\n      <App />\n    </ChakraProvider>\n      \n  </StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}